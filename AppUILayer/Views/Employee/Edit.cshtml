﻿@model AppUILayer.Models.BlogViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="container p-2">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
            {
                <div id="error-message" class="col-6 alert alert-danger mt-3">
                    @TempData["ErrorMessage"]
                </div>

                <script>
                // Hide the error message after 20 seconds
                setTimeout(function () {
                    $(".alert-danger").fadeOut("slow");
                }, 10000);
                </script>
            }
            <h4 class="ms-2">Edit Blog </h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group visually-hidden">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfCreation, "Date of Creation", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfCreation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfCreation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BlogUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BlogUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BlogUrl, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-4 ms-3">
                        <input type="submit" value="Save" class="btn btn-outline-warning" />
                        <a href="@Url.Action("Home", "Employee")" class="btn btn-outline-dark m-2">Back to List</a>

                    </div>
                </div>
            </div>

        </div>
    }



</div>

