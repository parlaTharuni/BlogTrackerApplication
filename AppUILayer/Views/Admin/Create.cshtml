﻿@model AppUILayer.Models.EmployeeRegisterModel

@{
    ViewBag.Title = "Create Employee";
}

<div class="container p-2">
    <h2>Add Employee</h2>
    @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
    {
        <div id="error-message" class="col-6 alert alert-danger mt-3">
            @TempData["ErrorMessage"]
        </div>

        <script>
         // Hide the error message after 20 seconds
         setTimeout(function () {
             $(".alert-danger").fadeOut("slow");
         }, 10000);
        </script>
    }
    <div class=" m-4">
        @using (Html.BeginForm("Create", "Admin", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(model => model.Name, "Enter Name :")
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailId, "Enter EmailId :")
                @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control", type = "email", required = "required" })
                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfJoining, "Date of Joining :")
                @Html.TextBoxFor(model => model.DateOfJoining, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.DateOfJoining, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Password, "Enter Password :")
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cnfrmPassword, "Enter Confirm Password  :")
                @Html.PasswordFor(model => model.cnfrmPassword, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.cnfrmPassword, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btn btn-primary">Create Employee</button>
        }
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>

